wpa_supplicant v2.10_fullmac
random: Trying to read entropy from /dev/random
Successfully initialized wpa_supplicant
Initializing interface 'wlan0' conf 'cert.conf' driver 'nl80211' ctrl_interface 'N/A' bridge 'N/A'
Configuration file 'cert.conf' -> '/home/user/work/stqa/vega/releases/fullmac/MBSSID_AUTH/WEZEN_SHELIAK_VARIANT_TEST/wpa_supplicant-2.10/wpa_supplicant/cert.conf'
Reading configuration file '/home/user/work/stqa/vega/releases/fullmac/MBSSID_AUTH/WEZEN_SHELIAK_VARIANT_TEST/wpa_supplicant-2.10/wpa_supplicant/cert.conf'
ctrl_interface='/var/run/wpa_supplicant'
ap_scan=1
Priority group 0
   id=0 ssid=''
nl80211: Supported cipher 00-0f-ac:1
nl80211: Supported cipher 00-0f-ac:5
nl80211: Supported cipher 00-0f-ac:2
nl80211: Supported cipher 00-0f-ac:4
nl80211: Supported cipher 00-0f-ac:10
nl80211: Supported cipher 00-0f-ac:6
nl80211: Supported cipher 00-14-72:1
nl80211: Supported cipher 00-0f-ac:8
nl80211: Supported cipher 00-0f-ac:9
nl80211: Supported cipher 00-0f-ac:11
nl80211: Supported cipher 00-0f-ac:12
nl80211: Supported cipher 00-0f-ac:13
nl80211: Using driver-based off-channel TX
nl80211: TDLS supported
nl80211: Supports Probe Response offload in AP mode
nl80211: Driver-advertised extended capabilities(default) - hexdump(len=0):
nl80211: Driver-advertised extended capabilities mask (default) - hexdump(len=0):
nl80211: Driver-advertised extended capabilities for interface type STATION
nl80211: Extended capabilities - hexdump(len=10): 04 00 48 00 00 00 00 40 00 20
nl80211: Extended capabilities mask - hexdump(len=10): 04 00 48 00 00 00 00 40 00 20
nl80211: key_mgmt=0x1ff0f enc=0xfef auth=0x7 flags=0x80410db63d8e0 rrm_flags=0x10 probe_resp_offloads=0x0 max_stations=0 max_remain_on_chan=5000 max_scan_ssids=2
nl80211: interface wlan0 in phy img_mac80211
nl80211: Set mode ifindex 4 iftype 2 (STATION)
nl80211: nl80211_set_mode: sending NRF_WIFI_UMAC_CMD_SET_INTERFACE command

nl80211: Subscribe to mgmt frames with non-AP handle (nil)
nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0104 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=040a multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=040b multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=040c multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=040d multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=090a multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=090b multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=090c multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=090d multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0409506f9a09 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=7f506f9a09 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0409506f9a1a multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0801 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=06 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0a07 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0a11 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0a0b multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0a1a multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=1101 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=1102 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0505 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0500 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=1301 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=1305 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=7e506f9a1a multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

netlink: Operstate: ifindex=4 linkmode=1 (userspace-control), operstate=5 (IF_OPER_DORMANT)
Add interface wlan0 to a new radio img_mac80211
nl80211: Regulatory information - country=00*
nl80211: Added 802.11b mode based on 802.11g information
nl80211: Mode IEEE 802.11g: 2412 2417 2422 2427 2432 2437 2442 2447 2452 2457 2462 2467[NO_IR] 2472[NO_IR] 2484[NO_IR]
nl80211: Mode IEEE 802.11a: 5180[NO_IR] 5200[NO_IR] 5220[NO_IR] 5240[NO_IR] 5260[NO_IR][RADAR] 5280[NO_IR][RADAR] 5300[NO_IR][RADAR] 5320[NO_IR][RADAR] 5500[NO_IR][RADAR] 5520[NO_IR][RADAR] 5540[NO_IR][RADAR]
nl80211: Mode IEEE 802.11b: 2412 2417 2422 2427 2432 2437 2442 2447 2452 2457 2462 2467[NO_IR] 2472[NO_IR] 2484[NO_IR]
wlan0: Own MAC address: 00:19:f5:33:11:79
wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=0 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=1 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=2 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=3 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=4 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=5 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wlan0: RSN: flushing PMKID list in the driver
wlan0: No enabled networks (1 disabled networks)
wlan0: State: DISCONNECTED -> INACTIVE
wlan0: WPS: UUID based on MAC address: 6497e8c8-03c4-5c6f-9fef-dda56f6b8e09
ENGINE: Loading builtin engines
ENGINE: Loading builtin engines
EAPOL: SUPP_PAE entering state DISCONNECTED
EAPOL: Supplicant port status: Unauthorized
nl80211: Skip set_supp_port(unauthorized) while not associated
EAPOL: KEY_RX entering state NO_KEY_RECEIVE
EAPOL: SUPP_BE entering state INITIALIZE
EAP: EAP entering state DISABLED
P2P: Add operating class 81
P2P: Channels - hexdump(len=11): 01 02 03 04 05 06 07 08 09 0a 0b
P2P: Own listen channel: 81:1
P2P: Random operating channel: 81:6
P2P: initialized
P2P: channels: 81:1,2,3,4,5,6,7,8,9,10,11
P2P: cli_channels:
MBO: Update non-preferred channels, non_pref_chan=N/A
wlan0: Added interface wlan0
wlan0: State: INACTIVE -> DISCONNECTED
nl80211: Set wlan0 operstate 0->0 (DORMANT)
netlink: Operstate: ifindex=4 linkmode=-1 (no change), operstate=5 (IF_OPER_DORMANT)
wlan0: Determining shared radio frequencies (max len 1)
wlan0: Shared frequencies (len=0): completed iteration
P2P: Add operating class 81
P2P: Channels - hexdump(len=11): 01 02 03 04 05 06 07 08 09 0a 0b
P2P: Update channel list
P2P: channels: 81:1,2,3,4,5,6,7,8,9,10,11
P2P: cli_channels:
Daemonize..
random: Got 17/20 bytes from /dev/random
RTM_NEWLINK: ifi_index=4 ifname=wlan0 operstate=2 linkmode=1 ifi_family=0 ifi_flags=0x1003 ([UP])
random: Got 3/3 bytes from /dev/random
EAPOL: disable timer tick
wpa_supplicant v2.10_fullmac
random: Trying to read entropy from /dev/random
Successfully initialized wpa_supplicant
Initializing interface 'wlan0' conf 'cert.conf' driver 'nl80211' ctrl_interface 'N/A' bridge 'N/A'
Configuration file 'cert.conf' -> '/home/user/work/stqa/vega/releases/fullmac/MBSSID_AUTH/WEZEN_SHELIAK_VARIANT_TEST/wpa_supplicant-2.10/wpa_supplicant/cert.conf'
Reading configuration file '/home/user/work/stqa/vega/releases/fullmac/MBSSID_AUTH/WEZEN_SHELIAK_VARIANT_TEST/wpa_supplicant-2.10/wpa_supplicant/cert.conf'
ctrl_interface='/var/run/wpa_supplicant'
ap_scan=1
Priority group 0
   id=0 ssid=''
nl80211: Supported cipher 00-0f-ac:1
nl80211: Supported cipher 00-0f-ac:5
nl80211: Supported cipher 00-0f-ac:2
nl80211: Supported cipher 00-0f-ac:4
nl80211: Supported cipher 00-0f-ac:10
nl80211: Supported cipher 00-0f-ac:6
nl80211: Supported cipher 00-14-72:1
nl80211: Supported cipher 00-0f-ac:8
nl80211: Supported cipher 00-0f-ac:9
nl80211: Supported cipher 00-0f-ac:11
nl80211: Supported cipher 00-0f-ac:12
nl80211: Supported cipher 00-0f-ac:13
nl80211: Using driver-based off-channel TX
nl80211: TDLS supported
nl80211: Supports Probe Response offload in AP mode
nl80211: Driver-advertised extended capabilities(default) - hexdump(len=0):
nl80211: Driver-advertised extended capabilities mask (default) - hexdump(len=0):
nl80211: Driver-advertised extended capabilities for interface type STATION
nl80211: Extended capabilities - hexdump(len=10): 04 00 48 00 00 00 00 40 00 20
nl80211: Extended capabilities mask - hexdump(len=10): 04 00 48 00 00 00 00 40 00 20
nl80211: key_mgmt=0x1ff0f enc=0xfef auth=0x7 flags=0x80410db63d8e0 rrm_flags=0x10 probe_resp_offloads=0x0 max_stations=0 max_remain_on_chan=5000 max_scan_ssids=2
nl80211: interface wlan0 in phy img_mac80211
nl80211: Set mode ifindex 4 iftype 2 (STATION)
nl80211: nl80211_set_mode: sending NRF_WIFI_UMAC_CMD_SET_INTERFACE command

nl80211: Subscribe to mgmt frames with non-AP handle (nil)
nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0104 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=040a multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=040b multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=040c multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=040d multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=090a multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=090b multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=090c multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=090d multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0409506f9a09 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=7f506f9a09 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0409506f9a1a multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0801 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=06 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0a07 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0a11 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0a0b multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0a1a multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=1101 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=1102 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0505 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=0500 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=1301 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=1305 multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

nl80211: Register frame type=0xd0 (WLAN_FC_STYPE_ACTION) nl_handle=(nil) match=7e506f9a1a multicast=0
nl80211: nrf_wifi_cfg80211_mgmt_frame_reg: sending NRF_WIFI_UMAC_CMD_REGISTER_FRAME command

netlink: Operstate: ifindex=4 linkmode=1 (userspace-control), operstate=5 (IF_OPER_DORMANT)
Add interface wlan0 to a new radio img_mac80211
nl80211: Regulatory information - country=00*
nl80211: Added 802.11b mode based on 802.11g information
nl80211: Mode IEEE 802.11g: 2412 2417 2422 2427 2432 2437 2442 2447 2452 2457 2462 2467[NO_IR] 2472[NO_IR] 2484[NO_IR]
nl80211: Mode IEEE 802.11a: 5180[NO_IR] 5200[NO_IR] 5220[NO_IR] 5240[NO_IR] 5260[NO_IR][RADAR] 5280[NO_IR][RADAR] 5300[NO_IR][RADAR] 5320[NO_IR][RADAR] 5500[NO_IR][RADAR] 5520[NO_IR][RADAR] 5540[NO_IR][RADAR]
nl80211: Mode IEEE 802.11b: 2412 2417 2422 2427 2432 2437 2442 2447 2452 2457 2462 2467[NO_IR] 2472[NO_IR] 2484[NO_IR]
wlan0: Own MAC address: 00:19:f5:33:11:79
wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=0 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=1 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=2 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=3 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=4 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wpa_driver_nl80211_set_key_cfg: ifindex=4 (wlan0) alg=0 addr=(nil) key_idx=5 set_tx=0 seq_len=0 key_len=0
nl80211: wpa_driver_nl80211_set_key_cfg: nrf_wifi_fmac_del_key, valid_fields = 4

nl80211: nrf_wifi_fmac_del_key: sending NRF_WIFI_UMAC_CMD_DEL_KEY command

wlan0: RSN: flushing PMKID list in the driver
wlan0: No enabled networks (1 disabled networks)
wlan0: State: DISCONNECTED -> INACTIVE
wlan0: WPS: UUID based on MAC address: 6497e8c8-03c4-5c6f-9fef-dda56f6b8e09
ENGINE: Loading builtin engines
ENGINE: Loading builtin engines
EAPOL: SUPP_PAE entering state DISCONNECTED
EAPOL: Supplicant port status: Unauthorized
nl80211: Skip set_supp_port(unauthorized) while not associated
EAPOL: KEY_RX entering state NO_KEY_RECEIVE
EAPOL: SUPP_BE entering state INITIALIZE
EAP: EAP entering state DISABLED
Using existing control interface directory.
ctrl_iface bind(PF_UNIX) failed: Address already in use
ctrl_iface exists, but does not allow connections - assuming it was leftover from forced program termination
Successfully replaced leftover ctrl_iface socket '/var/run/wpa_supplicant/wlan0'
P2P: Add operating class 81
P2P: Channels - hexdump(len=11): 01 02 03 04 05 06 07 08 09 0a 0b
P2P: Own listen channel: 81:1
P2P: Random operating channel: 81:6
P2P: initialized
P2P: channels: 81:1,2,3,4,5,6,7,8,9,10,11
P2P: cli_channels:
MBO: Update non-preferred channels, non_pref_chan=N/A
wlan0: Added interface wlan0
wlan0: State: INACTIVE -> DISCONNECTED
nl80211: Set wlan0 operstate 0->0 (DORMANT)
netlink: Operstate: ifindex=4 linkmode=-1 (no change), operstate=5 (IF_OPER_DORMANT)
wlan0: Determining shared radio frequencies (max len 1)
wlan0: Shared frequencies (len=0): completed iteration
P2P: Add operating class 81
P2P: Channels - hexdump(len=11): 01 02 03 04 05 06 07 08 09 0a 0b
P2P: Update channel list
P2P: channels: 81:1,2,3,4,5,6,7,8,9,10,11
P2P: cli_channels:
Daemonize..
random: Got 17/20 bytes from /dev/random
random: Got 3/3 bytes from /dev/random
EAPOL: disable timer tick
